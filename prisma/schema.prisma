generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int        @id @default(autoincrement())
  firstName  String
  lastName   String
  email      String     @unique
  password   String
  role       UserRole   @default(ADMIN)
  status     UserStatus @default(ACTIVE)
  isVerified Boolean    @default(false)
}

model Category {
  id              Int               @id @default(autoincrement())
  name            String            @unique
  productCategory ProductCategory[]
}

model Brand {
  id      Int       @id @default(autoincrement())
  name    String    @unique
  product Product[]
}

model ProductCategory {
  productId    Int
  productSku   String
  categoryName String
  categoryId   Int
  category     Category @relation(fields: [categoryId], references: [id])
  product      Product  @relation(fields: [productId], references: [id])

  @@id([productId, categoryId])
}

model Product {
  id              Int               @id @default(autoincrement())
  sku             String            @unique
  name            String            @unique
  image           String?
  qtyThreshold    Int?
  brandId         Int
  brand           Brand             @relation(fields: [brandId], references: [id])
  bundleProduct   BundleProduct[]
  productCategory ProductCategory[]
  stockQuantity   StockQuantity[]
}

model Location {
  id            Int             @id @default(autoincrement())
  name          String          @unique
  address       String
  stockQuantity StockQuantity[]
}

model StockQuantity {
  productId    Int
  productName  String
  productSku   String
  locationId   Int
  quantity     Int
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  locationName String
  location     Location @relation(fields: [locationId], references: [id])
  product      Product  @relation(fields: [productId], references: [id])

  @@id([productId, locationId])
}

model Bundle {
  id            Int             @id @default(autoincrement())
  name          String          @unique
  description   String
  bundleProduct BundleProduct[]
}

model BundleProduct {
  bundleId    Int
  productId   Int
  productName String
  productSku  String
  bundleName  String
  bundle      Bundle  @relation(fields: [bundleId], references: [id])
  product     Product @relation(fields: [productId], references: [id])

  @@id([productId, bundleId])
}

model ProcurementOrder {
  id               Int                    @id @default(autoincrement())
  orderDate        DateTime
  description      String
  paymentStatus    PaymentStatus          @default(PENDING)
  fulfilmentStatus FulfilmentStatus       @default(CREATED)
  supplierId       Int
  totalAmount      Float
  warehouseAddress String
  supplierAddress  String
  supplierEmail    String
  supplierName     String
  warehouseName    String
  procOrderItems   ProcurementOrderItem[]
}

model ProcurementOrderItem {
  quantity    Int
  procOrderId Int
  id          Int              @id @default(autoincrement())
  productName String
  productSku  String
  rate        Float
  procOrder   ProcurementOrder @relation(fields: [procOrderId], references: [id])
}

model Supplier {
  id      Int    @id @default(autoincrement())
  email   String @unique
  name    String
  address String
}

model Keys {
  id    Int    @id @default(autoincrement())
  key   String @unique
  value String @unique
}

enum UserRole {
  ADMIN
  INTERN
  PARTTIME
  FULLTIME
  CUSTOMER
}

enum UserStatus {
  ACTIVE
  DISABLED
}

enum PaymentStatus {
  PENDING
  PAID
}

enum FulfilmentStatus {
  CREATED
  ARRIVED
  COMPLETED
}
